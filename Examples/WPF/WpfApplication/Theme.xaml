<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="AppResources.xaml"/>
	</ResourceDictionary.MergedDictionaries>
    <DrawingImage x:Key="ThreeIcon">
        <DrawingImage.Drawing>
            <GeometryDrawing>
                <GeometryDrawing.Brush>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Border Padding="5" CornerRadius="0,10,0,10">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource PrimaryColor}"/>
                                </Border.Background>
                                <TextBlock x:Name="textBlock" FontSize="25" Height="35" Width="14" Foreground="White"><Run Text="3"/></TextBlock>
                            </Border>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </GeometryDrawing.Brush>
                <GeometryDrawing.Geometry>
                    <RectangleGeometry Rect="0,0,14,35"></RectangleGeometry>
                </GeometryDrawing.Geometry>
            </GeometryDrawing>
        </DrawingImage.Drawing>
    </DrawingImage>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeSmall}"/>
    </Style>
    <Style x:Key="MeterTextBoxStyle" TargetType="{x:Type TextBox}">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="Black" Offset="1"/>
					<GradientStop Color="#FF0F0F0F" Offset="0"/>
					<GradientStop Color="#FF8B8B8B" Offset="0.368"/>
					<GradientStop Color="#FF898989" Offset="0.291"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="Template" Value="{DynamicResource MeterTextBoxTemplate}"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
					<GradientStop Color="#FF727476" Offset="0.19"/>
					<GradientStop Color="#FFCCCCCC" Offset="1"/>
					<GradientStop Color="#FFC9C9C9" Offset="0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="3,2"/>
	</Style>
	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="{DynamicResource FontSizeSmall}"/>
	</Style>
	<Style TargetType="{x:Type Label}">
		<Setter Property="FontSize" Value="{DynamicResource FontSizeMedium}"/>
		<Setter Property="Focusable" Value="False"/>
	</Style>
	<!-- Resource dictionary entries should be defined here. -->
	<Style TargetType="{x:Type PasswordBox}">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="FontSize" Value="{DynamicResource FontSizeSmall}"/>
	</Style>
	<CornerRadius x:Key="ButtonCornerRadius">1</CornerRadius>
	<Style TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderBrush="White" Padding="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5" CornerRadius="{StaticResource ButtonCornerRadius}">
						<Border.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Border.RenderTransform>
						<Border.Background>
							<SolidColorBrush Color="{DynamicResource PrimaryColor}"/>
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.4">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource PrimaryColorLight}"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource PrimayerColorDark}"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBackground}"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledText}"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<ContentControl x:Name="contentControl"  Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="White" FontSize="{DynamicResource FontSizeMedium}"/>					
					</Border>					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="{DynamicResource BigMargin}"/>
		<Setter Property="Margin" Value="{DynamicResource Margin}"/>
		<Setter Property="FontSize" Value="18.667"/>
	</Style>
	<Style x:Key="SecondaryButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="20"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" CornerRadius="{StaticResource ButtonCornerRadius}" Padding="5,1,5,1" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource PrimaryColor}"/>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.4">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PrimaryColorLight}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PrimayerColorDark}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBackground}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledText}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                       
                        <ContentControl x:Name="contentControl"  Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="White" FontSize="{DynamicResource FontSizeMedium}"/>
                    </Border>					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="FontSize" Value="18.667"/>
	</Style>
    <Style x:Key="SerialButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="{StaticResource ButtonCornerRadius}" Padding="5,1,5,1" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource PrimaryColor}"/>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.4">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PrimaryColorLight}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PrimayerColorDark}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBackground}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledText}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                      
                        <ContentControl x:Name="contentControl"  Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="White" FontSize="{DynamicResource FontSizeMedium}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="FontSize" Value="18.667"/>
    </Style>
    <ControlTemplate x:Key="MeterTextBoxTemplate" TargetType="{x:Type TextBoxBase}">
		<Border BorderBrush="#3A000000" BorderThickness="1" CornerRadius="5">
			<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="ValidationStates">
					<VisualState x:Name="Valid"/>
					<VisualState x:Name="InvalidFocused"/>
					<VisualState x:Name="InvalidUnfocused"/>
				</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
			<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5">
				
				<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</Border>
		</Border>
	</ControlTemplate>
	<ControlTemplate x:Key="LabelFieldPair" TargetType="{x:Type GroupBox}">
		<Grid Margin="{TemplateBinding Padding}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition  Width="Auto" SharedSizeGroup="header"/>
				<ColumnDefinition SharedSizeGroup="field"/>
			</Grid.ColumnDefinitions>
			<ContentControl Content="{TemplateBinding Header}" Margin="{DynamicResource Margin}" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="{DynamicResource FontSizeSmall}" Focusable="False"/>
			<ContentControl Grid.Column="1" Content="{TemplateBinding Content}" Margin="{DynamicResource Margin}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
		</Grid>
	</ControlTemplate>
	<Style x:Key="LabelFieldPairStyle" TargetType="{x:Type GroupBox}">
		<Setter Property="Template" Value="{DynamicResource LabelFieldPair}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>	
	</Style>
	<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
	<Style x:Key="HotlinkGroupBoxStyle" TargetType="{x:Type GroupBox}">
		<Setter Property="BorderBrush" Value="#D5DFE5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="true">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<ContentPresenter Grid.Row="0" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="GridBox" Margin="{DynamicResource Margin}"/>
						<ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="CardBorder" Color="#FFD5DFE5"/>
	
	<Style x:Key="ToastButton" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderBrush="White" Padding="{TemplateBinding Padding}">
						<Border.Background>
							<SolidColorBrush Color="{DynamicResource ComplimentColor}"/>
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.4">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#FD000000"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#FD333333"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#FD4D4D4D"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="#FD9F9F9F"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl">
											<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledText}"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidFocused"/>
								<VisualState x:Name="InvalidUnfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<ContentControl x:Name="contentControl"  Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="White" FontSize="{DynamicResource FontSizeMedium}"/>					
					</Border>					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="Margin" Value="{DynamicResource SmallMargin}"/>
		<Setter Property="FontSize" Value="18.667"/>
	</Style>
    <Style TargetType="{x:Type ListView}">
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <!-- setting up triggers for alternate background colors -->
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource BackgroundColorLight}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource PrimaryColorLight}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource BackgroundColor}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Region: WaveformTimeline -->
    <SolidColorBrush x:Key="ControlBackgroundBrush"
                     Color="{DynamicResource BackgroundColorLight}" />
    <LinearGradientBrush x:Key="WaveformRightLevelBrush"
                         EndPoint="1,1"
                         StartPoint="1,0">
        <GradientStop Color="#6EBBE7"
                      Offset="0" />
        <GradientStop Color="#BFE2F8"
                      Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WaveformLeftLevelBrush"
                         EndPoint="1,0"
                         StartPoint="1,1">
        <GradientStop Color="#3171B1"
                      Offset="0" />
        <GradientStop Color="#5CA2D5"
                      Offset="1" />
    </LinearGradientBrush>
    
    <!-- EndRegion: WaveformTimeline -->
</ResourceDictionary>